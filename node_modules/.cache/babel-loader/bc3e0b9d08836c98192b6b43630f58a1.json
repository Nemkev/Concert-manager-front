{"ast":null,"code":"import _slicedToArray from \"/home/wse-207-71a/BestProject/Concert-manager-front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/wse-207-71a/BestProject/Concert-manager-front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/wse-207-71a/BestProject/Concert-manager-front/src/components/example.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getBuildings {\\n      name\\n      city\\n      id\\n      concerts {\\n        date\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst GET_BUILDINGS = gql(_templateObject());\nexport default function Example() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useQuery = useQuery(GET_BUILDINGS),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  console.log(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"You click counter is \", count, \" \"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Click on me\"));\n}","map":{"version":3,"sources":["/home/wse-207-71a/BestProject/Concert-manager-front/src/components/example.jsx"],"names":["React","useState","useQuery","gql","GET_BUILDINGS","Example","count","setCount","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,aAAa,GAAGD,GAAH,mBAAnB;AAeA,eAAe,SAASE,OAAT,GAAmB;AAAA,oBACNJ,QAAQ,CAAC,CAAD,CADF;AAAA;AAAA,QACzBK,KADyB;AAAA,QAClBC,QADkB;;AAAA,oBAGCL,QAAQ,CAACE,aAAD,CAHT;AAAA,QAGxBI,OAHwB,aAGxBA,OAHwB;AAAA,QAGfC,KAHe,aAGfA,KAHe;AAAA,QAGRC,IAHQ,aAGRA,IAHQ;;AAKhC,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBJ,KAAzB,MADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_BUILDINGS = gql`\n  {\n    getBuildings {\n      name\n      city\n      id\n      concerts {\n        date\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function Example() {\n  const [count, setCount] = useState(0);\n\n  const { loading, error, data } = useQuery(GET_BUILDINGS);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  console.log(data);\n  return (\n    <div>\n      <p>You click counter is {count} </p>\n      <button onClick={() => setCount(count + 1)}>Click on me</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}