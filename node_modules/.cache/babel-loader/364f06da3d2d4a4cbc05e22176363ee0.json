{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/wse-207-71a/BestProject/Concert-manager-front/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/wse-207-71a/BestProject/Concert-manager-front/front/src/components/Client.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    rates(currency: \\\"USD\\\") {\\n      currency\\n      rate\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n      {\\n        rates(currency: \\\"USD\\\") {\\n          currency\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nconst client = new ApolloClient({\n  uri: \"https://48p1r2roz4.sse.codesandbox.io\"\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(result => console.log(result));\nconst EXCHANGE_RATES = gql(_templateObject2());\nexport default function ExchangeRates() {\n  const _useQuery = useQuery(EXCHANGE_RATES),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Error :(\");\n  return data.rates.map(({\n    currency,\n    rate\n  }) => React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: currency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, currency, \": \", rate))));\n}","map":{"version":3,"sources":["/home/wse-207-71a/BestProject/Concert-manager-front/front/src/components/Client.jsx"],"names":["React","useQuery","gql","ApolloClient","ApolloProvider","client","uri","query","then","result","console","log","EXCHANGE_RATES","ExchangeRates","loading","error","data","rates","map","currency","rate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAIAD,MAAM,CACHE,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAF;AADA,CADT,EAUGM,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;AAYA,MAAMG,cAAc,GAAGV,GAAH,oBAApB;AASA,eAAe,SAASW,aAAT,GAAyB;AAAA,oBACLZ,QAAQ,CAACW,cAAD,CADH;AAAA,QAC9BE,OAD8B,aAC9BA,OAD8B;AAAA,QACrBC,KADqB,aACrBA,KADqB;AAAA,QACdC,IADc,aACdA,IADc;;AAGtC,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,KACpB,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEf,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEc,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,QACeC,IADf,CADF,CADF,CADK,CAAP;AASD","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nconst client = new ApolloClient({\n  uri: \"https://48p1r2roz4.sse.codesandbox.io\"\n});\n\nclient\n  .query({\n    query: gql`\n      {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\nconst EXCHANGE_RATES = gql`\n  {\n    rates(currency: \"USD\") {\n      currency\n      rate\n    }\n  }\n`;\n\nexport default function ExchangeRates() {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.rates.map(({ currency, rate }) => (\n    <ApolloProvider client={client}>\n      <div key={currency}>\n        <p>\n          {currency}: {rate}\n        </p>\n      </div>\n    </ApolloProvider>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}